<template>
  <div class="page" style="padding-bottom: 24px">
    <text class="page-title">{{ cityName }}</text>
    <text class="page-subtitle">{{ updateTime }}</text>

    <div class="hero-content">
      <image class="icon-weather" src="/common/weather/weather_{{ iconCode }}.png" />
      <text class="temperature">{{ temperature }}</text>
      <text class="temp-min-max">{{ tempMinMax }}</text>
    </div>

    <div class="page-list" style="margin-top: 28px">
      <div style="margin-top: -2px; flex-direction: column">
        <div style="margin-top: 14px; flex-direction: column" for="{{ item in figure }}">
          <text class="figure-desc">{{ item.value }}</text>
          <text class="figure-title">{{ item.name }}</text>
        </div>
      </div>
    </div>

    <div class="page-list" style="margin-top: 12px">
      <div style="margin-top: -8px; flex-direction: column">
        <div style="margin-top: 20px; flex-direction: column" for="{{ item in dayWeather }}">
          <text class="day-weather-title">{{ item.name }}</text>
          <div style="justify-content: space-between">
            <text class="day-weather-desc">{{ item.tempMinMax }}</text>
            <image
              class="small-weather-icon"
              src="/common/weather/weather_{{ item.iconCode }}.png"
            />
          </div>
        </div>
      </div>
    </div>

    <!-- <div class="hero-content" style="margin-top: 24px">
      <div class="button" onclick="Detail()">
        <text class="button-text">查看更多</text>
      </div>
    </div> -->
  </div>
</template>

<script>
// import router from "@system.router"
import interconnect from "@system.interconnect"
import file from "@system.file"
import {showToast} from "@system.prompt"

const connect = interconnect.instance()

export default {
  private: {
    cityName: "江阴市",
    updateTime: "5分钟前",
    iconCode: "0",
    temperature: "29°",
    tempMinMax: "26°/34°",
    figure: [
      {name: "紫外线指数", value: "4.0", uniqueId: 1},
      {name: "相对湿度 （%）", value: "82", uniqueId: 2},
      {name: "南风", value: "3", uniqueId: 3},
      {name: "气压 （hPa）", value: "1005", uniqueId: 4}
    ],
    dayWeather: [
      {name: "今天", tempMinMax: "25°/34°", iconCode: "0", uniqueId: 1},
      {name: "明天", tempMinMax: "25°/33°", iconCode: "1", uniqueId: 2},
      {name: "周六", tempMinMax: "25°/32°", iconCode: "2", uniqueId: 3},
      {name: "周日", tempMinMax: "25°/33°", iconCode: "3", uniqueId: 4},
      {name: "周一", tempMinMax: "25°/32°", iconCode: "4", uniqueId: 5},
      {name: "周二", tempMinMax: "25°/32°", iconCode: "7", uniqueId: 6},
      {name: "周三", tempMinMax: "25°/32°", iconCode: "12", uniqueId: 7}
    ]
  },

  // Detail() {
  //   // 跳转到应用内的某个页面，当前页面无法返回
  //   router.push({
  //     uri: "/pages/detail"
  //   })
  // },

  // onInit() {
  //   brightness.setKeepScreenOn({
  //     keepScreenOn: true
  //   })
  //   let conn = interconnect.instance()
  //   conn.onmessage = async (data) => {
  //     console.log("Received message:", data)
  //     showToast({message: data, duration: 200})
  //   }
  // },

  // onInit() {
    
  // },


  onShow() {
    connect.onmessage = (data) => {
      showToast({message: data.data, duration: 200})
      file.writeText({
        uri: "internal://files/weather/weather.txt",
        text: data.data,
        success: function () {
          showToast({message: "天气数据已保存", duration: 200})
          console.log("handling success")
          showToast({message: "天气数据已保存", duration: 200})
        },
        fail: function (data, code) {
          showToast({message: `天气数据保存失败${code}`, duration: 200})
          console.log(`handling fail, code = ${code}`)
        }
      })
    }
    connect.onerror = (error) => {
      console.error("Connection error:", error)
    }
    connect.onclose = () => {
      console.log("Connection closed")
      // 尝试重新连接
      setTimeout(() => {
        connect.open()
      }, 5000)
    }
    connect.open()
  },

  onHide() {
    connect.close()
  },

  onDestroy() {
    connect.close()
  }
}
</script>

<style>
@import "../../common/style.css";

.icon-weather {
  width: 85px;
  height: 85px;
  margin-top: 40px;
}

.hero-content {
  flex-direction: column;
  align-items: center;
}

.page-list {
  flex-direction: column;
  padding: 0 12px 12px 12px;
  color: #ffffff;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 12px;
}

.temperature {
  font-size: 64px;
  font-weight: bold;
  margin-top: 0px;
  padding-left: 10px;
}

.temp-min-max {
  font-size: 36px;
  font-weight: bold;
  color: rgba(255, 255, 255, 0.8);
  margin-top: -9px;
  padding-left: 6px;
  margin-bottom: 40px;
}

.aqi {
  font-size: 28px;
  font-weight: bold;
  margin-top: 66px;
}

.aqi-desc {
  font-size: 28px;
  font-weight: bold;
  margin-top: 2px;
}

.figure-title {
  font-size: 24px;
  margin-top: 2px;
  color: rgba(255, 255, 255, 0.8);
}

.figure-desc {
  font-size: 39px;
  font-weight: bold;
  margin-left: -1px;
}

.day-weather-title {
  font-size: 28px;
  color: rgba(255, 255, 255, 0.8);
}

.day-weather-desc {
  font-size: 32px;
}

.small-weather-icon {
  width: 48px;
  height: 48px;
}

.button {
  flex-direction: column;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.2);
  padding: 18px 20px;
  border-radius: 50%;
}

.button-text {
  font-size: 29px;
}
</style>
